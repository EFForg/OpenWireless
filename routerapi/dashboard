#!/usr/bin/env python2.7
"""
Initial data to display the web dashboard.
"""
import subprocess

import check_interface_connection
import common
import ip_address_retriever
import run
import uci

def get_dashboard():
    """Render JSON dashboard data response."""
    def get_ping_output():
        """Ping a server and return the output"""
        try:
            return run.check_output(
                ['/usr/bin/sudo', '/bin/ping', '-c1', 'eff.org'])
        except subprocess.CalledProcessError:
            return 'N/A'

    ping_output = get_ping_output()

    if "N/A" in ping_output:
        connected = False
        ping_speed = "N/A"
    else:
        connected = True
        ping_speed = int(float(ping_output.split(' ')[11].split('=')[1]))

    wan_ip = ip_address_retriever.get_external_ip_address()
    lan_ip = ip_address_retriever.get_internal_ip_address("ge00")

    ssid = uci.get("wireless.@wifi-iface[2].ssid")

    private_wifi_on = check_interface_connection.enabled(2)
    openwireless_on = check_interface_connection.enabled(1)

    def get_openwireless_use():
        use_since_last_reset = uci.get("openwireless.use_since_last_reset")
        use_before_last_reset = uci.get("openwireless.use_before_last_reset")
        use_before_last_ui_reset = uci.get("openwireless.use_at_last_ui_reset")
        use_in_bytes = float(use_since_last_reset) + float(use_before_last_reset) - float(use_before_last_ui_reset)
        use_in_mbs = use_in_bytes/1000000.0
        return(str(int(use_in_mbs)))

    openwireless_use = get_openwireless_use()

    [last_check_date,avail] = open("/etc/last_update_check").read().split()
   
    if (avail=="Y"):
        update_available = True
    else:
        update_available = False

    result = {
        "id": 1,
        "jsonrpc": "2.0",
        "result": {
            "internet": {
                "name": "Internet",
                "uploadSpeed": "...",
                "uploadSpeedMetric": "Mb/s",
                "downloadSpeed": "...",
                "downloadSpeedMetric": "Mb/s",
                "pingSpeed": ping_speed,
                "pingSpeedMetric": "ms",
                "connected": connected
            },
            "lanNetwork": {
                "name": "LAN Network",
                "uploadSpeed": "...",
                "uploadSpeedMetric": "Mb/s",
                "downloadSpeed": "...",
                "downloadSpeedMetric": "Mb/s",
                "devices": "0"
            },
            "privateWifi": {
                "name": "Private WiFi",
                "uploadSpeed": "...",
                "uploadSpeedMetric": "Mb/s",
                "downloadSpeed": "...",
                "downloadSpeedMetric": "Mb/s",
                "devices": "0",
                "on": private_wifi_on,
                "ssid": ssid
            },
            "openWireless": {
                "name": "Openwireless.org",
                "uploadSpeed": "...",
                "uploadSpeedMetric": "Mb/s",
                "downloadSpeed": "...",
                "downloadSpeedMetric": "Mb/s",
                "maxBandwidthPercent":
                    uci.get("openwireless.maxbandwidthpercentage"),
                "maxMonthlyBandwidth":
                    uci.get("openwireless.maxmonthlybandwidth"),
                "maxMonthlyBandwidthMetric": "Mb",
                "monthlyBandwidthUsage": openwireless_use,
                "on": openwireless_on
            },
            "updateAvailable": update_available,
            "lastCheckDate": last_check_date,
            "wanIp": wan_ip,
            "lanIp": lan_ip
        }
    }
    common.render_success(result)

get_dashboard()
