#!/usr/bin/env python2.7
import json
import os
import sys

import auth
import common
import uci

def jsonrpc_change_password_first_time(auth_path):
    """Accept a JSONRPC-style change password, with parameters like so:

    {"jsonrpc":"2.0","method":"setpassword","params":["username","password"],"id":1}

    This endpoint does not require the user to provide their existing password,
    but it can only be used when setting the administrator password for the first
    time. If a password is already set, this endpoint will return 403.

    This needs to be a separate endpoint from change_password because it is
    listed in auth.py as not requiring authentication cookies.
    """
    data = json.loads(sys.stdin.read())
    try:
        params = data["params"]
        username = params[0]
        new_password = params[1]
    except KeyError, e:
        common.render_error(e.__str__())
    except IndexError, e:
        common.render_error(e.__str__())

    a = auth.Auth(auth_path)
    if a.password_exists():
        common.render_error('Administrator password has already been set.')
    else:
        if not a.save_password(new_password):
            common.render_error("Invalid password supplied.")
        remote_address = os.environ.get('REMOTE_ADDR')
        tokens = a.authenticate(new_password, remote_address)
        uci.set('openwireless.setup_state', 'setup-private-net')
        uci.commit('openwireless')
        print "Content-Type: application/json"
        print a.login_headers(tokens)
        print
        print "{}"

if __name__ == '__main__':
    jsonrpc_change_password_first_time(auth.default_path())
