#!/usr/bin/env python2.7
import json
import os
import subprocess
import sys
import time

import common
import uci

def jsonrpc_set_private_ssid():
    data = json.loads(sys.stdin.read())
    try:
        (name, passphrase) = data['params']
    except KeyError, e:
        common.render_error(e.__str__())
    except ValueError, e:
        common.render_error(e.__str__())
    if len(passphrase) < 8:
        common.render_error("Passphrase must contain at least 8 characters.")
    # TODO: filter input
    uci.set('wireless.@wifi-iface[2].ssid', name)
    uci.set('wireless.@wifi-iface[2].key', passphrase)
    uci.set('wireless.@wifi-iface[2].encryption', 'psk2+ccmp')
    uci.set('wireless.@wifi-iface[2].disabled', '0')
    uci.commit('wireless')
    # We render the response but don't exit, because we still need to run
    # `wifi reload', and if we run that before rendering, the response might not
    # reach the client.
    if os.fork() != 0:
        common.render_success({'ssid': name})
    else:
        sys.stdout.close()
        time.sleep(20)
        # Indicate that setup is complete and the user should be sent straight
        # to the dashboard in the future.
        uci.set('openwireless.setup_state', 'complete')
        uci.commit('openwireless')
        common.reset_wifi()
        sys.exit(0)

if __name__ == '__main__':
    jsonrpc_set_private_ssid()
